openapi: 3.0.0
info:
    title: Event Management Platform API
    description: API for managing events, tickets, schedules, and analytics
    version: 1.0.0
servers:
    - url: http://localhost:5000/api
      description: Development server
    - url: https://api.eventplatform.com/v1
      description: Production server
tags:
    - name: Authentication
      description: User authentication and registration
    - name: Events
      description: Event management operations
    - name: Tickets
      description: Ticket purchasing and management
    - name: Schedules
      description: Event schedule management
    - name: Analytics
      description: Event analytics and reporting
    - name: Users
      description: User profile management
components:
    securitySchemes:
        BearerAuth:
            type: http
            scheme: bearer
            bearerFormat: JWT
    schemas:
        User:
            type: object
            properties:
                id:
                    type: string
                    example: 5f8d0d55b54764421b7156c3
                name:
                    type: string
                    example: John Doe
                email:
                    type: string
                    example: john@example.com
                role:
                    type: string
                    enum: [attendee, organizer, admin]
                    example: attendee
                createdAt:
                    type: string
                    format: date-time
                    example: "2023-08-15T10:30:00Z"
        Event:
            type: object
            properties:
                id:
                    type: string
                    example: 5f8d0d55b54764421b7156c4
                title:
                    type: string
                    example: Tech Conference 2023
                description:
                    type: string
                    example: Annual technology conference
                date:
                    type: string
                    format: date
                    example: "2023-10-15"
                time:
                    type: string
                    example: "09:00 AM"
                location:
                    type: object
                    properties:
                        venue:
                            type: string
                            example: Convention Center
                        address:
                            type: string
                            example: 123 Main St
                        city:
                            type: string
                            example: New York
                        country:
                            type: string
                            example: USA
                category:
                    type: string
                    example: Technology
                images:
                    type: array
                    items:
                        type: string
                    example: ["image1.jpg", "image2.jpg"]
                videos:
                    type: array
                    items:
                        type: string
                    example: ["video1.mp4"]
                organizer:
                    $ref: "#/components/schemas/User"
                status:
                    type: string
                    enum: [draft, published, cancelled]
                    example: published
                createdAt:
                    type: string
                    format: date-time
                    example: "2023-08-01T08:15:00Z"
        Ticket:
            type: object
            properties:
                id:
                    type: string
                    example: 5f8d0d55b54764421b7156c5
                name:
                    type: string
                    example: VIP Pass
                type:
                    type: string
                    enum: [general, vip, premium, student]
                    example: vip
                price:
                    type: number
                    example: 199.99
                quantity:
                    type: integer
                    example: 100
                sold:
                    type: integer
                    example: 75
                validFrom:
                    type: string
                    format: date-time
                    example: "2023-09-01T00:00:00Z"
                validUntil:
                    type: string
                    format: date-time
                    example: "2023-10-14T23:59:59Z"
        Order:
            type: object
            properties:
                id:
                    type: string
                    example: 5f8d0d55b54764421b7156c6
                user:
                    $ref: "#/components/schemas/User"
                event:
                    $ref: "#/components/schemas/Event"
                tickets:
                    type: array
                    items:
                        type: object
                        properties:
                            ticketType:
                                $ref: "#/components/schemas/Ticket"
                            quantity:
                                type: integer
                                example: 2
                            price:
                                type: number
                                example: 199.99
                totalAmount:
                    type: number
                    example: 399.98
                paymentStatus:
                    type: string
                    enum: [pending, completed, failed, refunded]
                    example: completed
                paymentMethod:
                    type: string
                    example: credit_card
                transactionId:
                    type: string
                    example: ch_1JXqZ72eZvKYlo2C0ZJZzX0H
                createdAt:
                    type: string
                    format: date-time
                    example: "2023-09-10T14:30:00Z"
        Schedule:
            type: object
            properties:
                id:
                    type: string
                    example: 5f8d0d55b54764421b7156c7
                event:
                    $ref: "#/components/schemas/Event"
                sessions:
                    type: array
                    items:
                        type: object
                        properties:
                            title:
                                type: string
                                example: Keynote Address
                            description:
                                type: string
                                example: Opening keynote by industry leader
                            startTime:
                                type: string
                                format: date-time
                                example: "2023-10-15T09:00:00Z"
                            endTime:
                                type: string
                                format: date-time
                                example: "2023-10-15T10:30:00Z"
                            speaker:
                                type: string
                                example: Jane Smith
                            location:
                                type: string
                                example: Main Hall
                lastUpdated:
                    type: string
                    format: date-time
                    example: "2023-10-01T11:45:00Z"
        Error:
            type: object
            properties:
                error:
                    type: string
                    example: Resource not found
                message:
                    type: string
                    example: The requested resource was not found
security:
    - BearerAuth: []
paths:
    # Authentication endpoints
    /auth/register:
        post:
            tags: [Authentication]
            summary: Register a new user
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                name:
                                    type: string
                                    example: John Doe
                                email:
                                    type: string
                                    example: john@example.com
                                password:
                                    type: string
                                    example: password123
                                role:
                                    type: string
                                    enum: [attendee, organizer, admin]
                                    example: attendee
            responses:
                "200":
                    description: User registered successfully
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    token:
                                        type: string
                                        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
                "400":
                    description: Bad request
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"
    /auth/login:
        post:
            tags: [Authentication]
            summary: Authenticate a user
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                email:
                                    type: string
                                    example: john@example.com
                                password:
                                    type: string
                                    example: password123
            responses:
                "200":
                    description: Login successful
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    token:
                                        type: string
                                        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
                "401":
                    description: Unauthorized
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"
    # Event endpoints
    /events:
        get:
            tags: [Events]
            summary: Get all published events
            parameters:
                - in: query
                  name: category
                  schema:
                      type: string
                  description: Filter by category
                - in: query
                  name: location
                  schema:
                      type: string
                  description: Filter by city
                - in: query
                  name: dateFrom
                  schema:
                      type: string
                      format: date
                  description: Filter by start date
                - in: query
                  name: dateTo
                  schema:
                      type: string
                      format: date
                  description: Filter by end date
                - in: query
                  name: minPrice
                  schema:
                      type: number
                  description: Minimum ticket price
                - in: query
                  name: maxPrice
                  schema:
                      type: number
                  description: Maximum ticket price
                - in: query
                  name: search
                  schema:
                      type: string
                  description: Search term
            responses:
                "200":
                    description: List of events
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: "#/components/schemas/Event"
        post:
            tags: [Events]
            summary: Create a new event
            security:
                - BearerAuth: []
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Event"
            responses:
                "201":
                    description: Event created successfully
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Event"
                "401":
                    description: Unauthorized
    /events/{id}:
        put:
            tags: [Events]
            summary: Update an event
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                      type: string
                  description: Event ID
            security:
                - BearerAuth: []
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Event"
            responses:
                "200":
                    description: Event updated successfully
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Event"
                "401":
                    description: Unauthorized
                "404":
                    description: Event not found
        delete:
            tags: [Events]
            summary: Delete an event
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                      type: string
                  description: Event ID
            security:
                - BearerAuth: []
            responses:
                "200":
                    description: Event deleted successfully
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    msg:
                                        type: string
                                        example: Event removed
                "401":
                    description: Unauthorized
                "404":
                    description: Event not found
    # Ticket endpoints
    /tickets:
        post:
            tags: [Tickets]
            summary: Create a new ticket type
            security:
                - BearerAuth: []
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                event:
                                    type: string
                                    example: 5f8d0d55b54764421b7156c4
                                name:
                                    type: string
                                    example: VIP Pass
                                type:
                                    type: string
                                    enum: [general, vip, premium, student]
                                    example: vip
                                price:
                                    type: number
                                    example: 199.99
                                quantity:
                                    type: integer
                                    example: 100
                                validFrom:
                                    type: string
                                    format: date-time
                                    example: "2023-09-01T00:00:00Z"
                                validUntil:
                                    type: string
                                    format: date-time
                                    example: "2023-10-14T23:59:59Z"
            responses:
                "201":
                    description: Ticket type created
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Ticket"
                "400":
                    description: Bad request
    /tickets/purchase:
        post:
            tags: [Tickets]
            summary: Initiate ticket purchase
            security:
                - BearerAuth: []
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                eventId:
                                    type: string
                                    example: 5f8d0d55b54764421b7156c4
                                tickets:
                                    type: array
                                    items:
                                        type: object
                                        properties:
                                            ticketId:
                                                type: string
                                                example: 5f8d0d55b54764421b7156c5
                                            quantity:
                                                type: integer
                                                example: 2
            responses:
                "200":
                    description: Payment intent created
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    clientSecret:
                                        type: string
                                        example: pi_3KtX4k2eZvKYlo2C0XrY7Lb0_secret_abc123
                                    totalAmount:
                                        type: number
                                        example: 399.98
                "400":
                    description: Bad request
    /tickets/confirm:
        post:
            tags: [Tickets]
            summary: Confirm payment and create order
            security:
                - BearerAuth: []
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                paymentIntentId:
                                    type: string
                                    example: pi_3KtX4k2eZvKYlo2C0XrY7Lb0
                                eventId:
                                    type: string
                                    example: 5f8d0d55b54764421b7156c4
                                tickets:
                                    type: array
                                    items:
                                        type: object
                                        properties:
                                            ticketId:
                                                type: string
                                                example: 5f8d0d55b54764421b7156c5
                                            quantity:
                                                type: integer
                                                example: 2
            responses:
                "200":
                    description: Order created
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Order"
                "400":
                    description: Bad request
    /tickets/orders:
        get:
            tags: [Tickets]
            summary: Get user's orders
            security:
                - BearerAuth: []
            responses:
                "200":
                    description: List of user orders
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: "#/components/schemas/Order"
    # Schedule endpoints
    /schedules:
        post:
            tags: [Schedules]
            summary: Create or update event schedule
            security:
                - BearerAuth: []
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Schedule"
            responses:
                "200":
                    description: Schedule updated
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Schedule"
    /schedules/{eventId}:
        get:
            tags: [Schedules]
            summary: Get event schedule
            parameters:
                - in: path
                  name: eventId
                  required: true
                  schema:
                      type: string
                  description: Event ID
            responses:
                "200":
                    description: Event schedule
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Schedule"
                "404":
                    description: Schedule not found
    # Analytics endpoints
    /analytics/events/{eventId}:
        get:
            tags: [Analytics]
            summary: Get event analytics
            security:
                - BearerAuth: []
            parameters:
                - in: path
                  name: eventId
                  required: true
                  schema:
                      type: string
                  description: Event ID
            responses:
                "200":
                    description: Event analytics
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    event:
                                        type: string
                                        example: Tech Conference 2023
                                    totalSales:
                                        type: number
                                        example: 15000
                                    ticketsSold:
                                        type: integer
                                        example: 150
                                    ticketSales:
                                        type: array
                                        items:
                                            type: object
                                            properties:
                                                name:
                                                    type: string
                                                    example: VIP Pass
                                                type:
                                                    type: string
                                                    example: vip
                                                price:
                                                    type: number
                                                    example: 199.99
                                                available:
                                                    type: integer
                                                    example: 50
                                                sold:
                                                    type: integer
                                                    example: 50
                                                revenue:
                                                    type: number
                                                    example: 9999.5
                                    attendanceRate:
                                        type: string
                                        example: 85.71%
                "401":
                    description: Unauthorized
    /analytics/organizer:
        get:
            tags: [Analytics]
            summary: Get organizer analytics
            security:
                - BearerAuth: []
            responses:
                "200":
                    description: Organizer analytics
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    totalEvents:
                                        type: integer
                                        example: 5
                                    totalRevenue:
                                        type: number
                                        example: 25000
                                    totalAttendees:
                                        type: integer
                                        example: 350
                                    avgRevenuePerEvent:
                                        type: number
                                        example: 5000
                "401":
                    description: Unauthorized
    # User endpoints
    /auth/profile:
        get:
            tags: [Users]
            summary: Get user profile
            security:
                - BearerAuth: []
            responses:
                "200":
                    description: User profile
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/User"
                "401":
                    description: Unauthorized
